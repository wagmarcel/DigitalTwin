name: Tag Image with Release Version

on:
  push:
    tags:
      - v*

jobs:
  push-release-images:
    runs-on: ubuntu-latest
    env: 
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_PREFIX: ${{ secrets.DOCKER_PREFIX }}
      SELF_HOSTED_RUNNER: true
    steps:
      - uses: actions/checkout@v2
      - name: Prepare K3d cluster
        run: |
          echo Install Java 17
          echo ---------------
          sudo apt update
          sudo apt install openjdk-17-jdk openjdk-17-jre

          echo Installing maven
          echo ----------------------
          wget https://archive.apache.org/dist/maven/maven-3/3.8.7/binaries/apache-maven-3.8.7-bin.tar.gz
          tar -xzf apache-maven-3.8.7-bin.tar.gz
          sudo mv apache-maven-3.8.7 /opt/
          rm apache-maven-3.8.7-bin.tar.gz
          touch maven.sh
          sudo chmod 775 /etc/profile.d/maven.sh
          echo 'M2_HOME='/opt/apache-maven-3.8.7'
          PATH="$M2_HOME/bin:$PATH"
          export PATH' >> maven.sh
          sudo mv maven.sh /etc/profile.d/
          source /etc/profile.d/maven.sh
          mvn --version
      - name: Build Platform locally
        run: |
          exit 1
          cd test && bash build-local-platform.sh
      - name: Push release images
        shell: bash
        run: |
          exit
          set +o pipefail
          docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
          TARGET_DOCKER_TAG=`git describe --tags --exact-match` || exit 1
          echo Selected tag ${TARGET_DOCKER_TAG}
          # Tag and push passed "k3d-iff.localhost:12345" with release tag
          docker images
          images=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep ":${TARGET_DOCKER_TAG}")
          echo I will push the following images: ${images}
          for image in $images; do
            newimage=$(echo $image | sed -r "s/k3d-iff.localhost:12345/docker.io/g");
            echo I will push image ${image} as ${newimage}
            docker tag ${image} ${newimage};
            docker push ${newimage};
          done
      - name: Setup upterm session
        if: failure()
        uses: lhotari/action-upterm@v1
