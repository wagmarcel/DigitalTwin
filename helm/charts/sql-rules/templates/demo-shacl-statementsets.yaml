---
# yamllint disable rule:line-length
apiVersion: industry-fusion.com/v1alpha2
kind: BeamSqlStatementSet
metadata:
    name: demo-shacle-validation
    annotations:
        checksum/config: >-
            {{ include (print $.Template.BasePath "/demo-shacl-tables.yaml") . | sha256sum }}
            {{ include (print $.Template.BasePath "/demo-shacl-kafka-topics.yaml") . | sha256sum }}
spec:
    sqlstatements:
        - |-
            /* validate relationship hasWorkpiece of plasmacutter object
            link count: [0,1]
            part of shacl-validator */
            INSERT INTO alerts_bulk
            SELECT this AS resource,
                'Data validation of hasWorkpiece' AS event,
                'Development' AS environment,
                ARRAY ['SHACL Validator'] AS service,
                CASE WHEN (linkcount > 1 OR linkcount <> entitycount) AND typ IS NOT NULL THEN 'warning'
                    ELSE 'ok' END AS severity,
                'customer'  customer,
                CASE WHEN linkcount > 1 AND typ IS NOT NULL THEN 'Model validation for relationship https://industry-fusion.com/types/v0.9/hasWorkpiece failed for ' || this || ' . Found ' || CAST(linkcount AS STRING) || ' relationships instead of [0,1]!'
                    WHEN linkcount <> entitycount AND typ IS NOT NULL THEN 'Model validation for relationship https://industry-fusion.com/types/v0.9/hasWorkpiece failed for '|| this || '. Not all relationships are linked to existing entities.'
                    ELSE 'All ok' END as `text`
                FROM
                (
                    SELECT A.id AS this, A.`type` as typ, count(C.`type`) AS entitycount, count(B.`type`) AS linkcount
                    FROM cutter_view AS A
                    LEFT JOIN attributes_view AS B ON A.`https://industry-fusion.com/types/v0.9/hasWorkpiece` = B.id
                    LEFT JOIN workpiece_view AS C ON B.`https://uri.etsi.org/ngsi-ld/hasObject` = C.id
                    WHERE
                        (B.`type` = 'https://uri.etsi.org/ngsi-ld/Relationship' OR B.`type` IS NULL)
                        AND (B.entityId = A.id OR B.entityId IS NULL)
                        AND (B.name = 'https://industry-fusion.com/types/v0.9/hasWorkpiece' OR B.name IS NULL)
                    GROUP BY A.id, A.`type`
            );
        - |-
            /* validate relationship hasFilter of plasmacutter object
            link count: 1
            part of shacle-validator */
            INSERT INTO alerts_bulk
            SELECT this AS resource,
                'Data validation of hasFilter' AS event,
                'Development' AS environment,
                ARRAY ['SHACL Validator'] AS service,
                CASE WHEN (linkcount <> 1 OR linkcount <> entitycount) AND typ IS NOT NULL THEN 'warning'
                    ELSE 'ok' END AS severity,
                'customer'  customer,
                CASE WHEN linkcount <> 1 AND typ IS NOT NULL THEN 'Model validation for relationship https://industry-fusion.com/types/v0.9/hasFilter failed for ' || this || ' . Found ' || CAST(linkcount AS STRING) || ' relationships instead of 1!'
                    WHEN linkcount <> entitycount AND typ IS NOT NULL THEN 'Model validation for relationship https://industry-fusion.com/types/v0.9/hasFilter failed for '|| this || '. Not all relationships are linked to existing entities.'
                    ELSE 'All ok' END as `text`
                FROM
                (
                    SELECT A.id AS this, A.`type` as typ, count(C.`type`) AS entitycount, count(B.`type`) AS linkcount
                    FROM cutter_view AS A
                    LEFT JOIN attributes_view AS B ON A.`https://industry-fusion.com/types/v0.9/hasFilter` = B.id
                    LEFT JOIN filter_view AS C ON B.`https://uri.etsi.org/ngsi-ld/hasObject` = C.id
                    WHERE
                        (B.`type` = 'https://uri.etsi.org/ngsi-ld/Relationship' OR B.`type` IS NULL)
                        AND (B.entityId = A.id OR B.entityId IS NULL)
                        AND (B.name = 'https://industry-fusion.com/types/v0.9/hasFilter' OR B.name IS NULL)
                    GROUP BY A.id, A.`type`
            );
        - |-
            /* validate property state of all machine entities 
            part of shacle-validator demo */
            INSERT INTO alerts_bulk
            SELECT this AS resource, 
                'Data validation of state' AS event,
                'Development' AS environment,
                ARRAY ['SHACL Validator'] AS service,
                severity,
                'customer'  customer,
                CASE WHEN severity <> 'ok' 
                    THEN 'Model validation for relationship https://industry-fusion.com/types/v0.9/state failed for '|| this || ': Invalid value ' || val
                    ELSE 'State ok' END as `text`
            FROM (
                SELECT this, typ, val, nodeType,
                CASE WHEN typ IS NOT NULL AND (nodeType <> '@id' 
                    OR (  val <> 'https://industry-fusion.com/types/v0.9/state_OFF' 
                    AND val <> 'https://industry-fusion.com/types/v0.9/state_ON'
                    AND val <> 'https://industry-fusion.com/types/v0.9/state_PREPARATION'
                    AND val <> 'https://industry-fusion.com/types/v0.9/state_PROCESSING'
                    AND val <> 'https://industry-fusion.com/types/v0.9/state_CLEARING'
                    AND val <> 'https://industry-fusion.com/types/v0.9/state_COOLINGDOWN')) THEN 'warning'
                    ELSE 'ok' END AS severity
                FROM (
                    SELECT A.id as this,
                        A.`type` as typ,
                        B.`https://uri.etsi.org/ngsi-ld/hasValue` as val,
                        B.nodeType as nodeType 
                    FROM machine_view AS A
                    JOIN attributes_view AS B ON A.`https://industry-fusion.com/types/v0.9/state` = B.id
                )
            );
        - |-
            /* validate relationship hasCartridge of filter object
            link count: [0,1]
            part of shacle validator */
            INSERT INTO alerts_bulk
            SELECT this AS resource,
                'Data validation of hasCartridge' AS event,
                'Development' AS environment,
                ARRAY ['SHACL Validator'] AS service,
                CASE WHEN (linkcount > 1 OR linkcount <> entitycount) AND typ IS NOT NULL THEN 'warning'
                    ELSE 'ok' END AS severity,
                'customer'  customer,
                CASE WHEN linkcount > 1 AND typ IS NOT NULL THEN 'Model validation for relationship https://industry-fusion.com/types/v0.9/hasCartridge failed for ' || this || ' . Found ' || CAST(linkcount AS STRING) || ' relationships instead of [0,1]!'
                    WHEN linkcount <> entitycount AND typ IS NOT NULL THEN 'Model validation for relationship https://industry-fusion.com/types/v0.9/hasCartridge failed for '|| this || '. Not all relationships are linked to existing entities.'
                    ELSE 'All ok' END as `text`
                FROM
                (
                    SELECT A.id AS this, A.`type` as typ, count(C.`type`) AS entitycount, count(B.`type`) AS linkcount
                    FROM filter_view AS A
                    LEFT JOIN attributes_view AS B ON A.`https://industry-fusion.com/types/v0.9/hasCartridge` = B.id
                    LEFT JOIN filter_cartridge_view AS C ON B.`https://uri.etsi.org/ngsi-ld/hasObject` = C.id
                    WHERE
                        (B.`type` = 'https://uri.etsi.org/ngsi-ld/Relationship' OR B.`type` IS NULL)
                        AND (B.entityId = A.id OR B.entityId IS NULL)
                        AND (B.name = 'https://industry-fusion.com/types/v0.9/hasCartridge' OR B.name IS NULL)
                    GROUP BY A.id, A.`type`
            );
        - |-
            /* validate property wasteClass of filter-cartridge object
            part of shacl validator */
            INSERT INTO alerts_bulk
            SELECT idx AS resource,
                'Data validation of wasteClass' AS event,
                'Development' AS environment,
                ARRAY ['SHACL Validator'] AS service,
                CASE WHEN typ IS NOT NULL AND (val is NULL OR nodeType <> '@id'
                    OR (val <> 'https://industry-fusion.com/types/v0.9/WC0' AND
                        val <> 'https://industry-fusion.com/types/v0.9/WC1' AND
                        val <> 'https://industry-fusion.com/types/v0.9/WC2'))
                    THEN 'warning'
                    ELSE 'ok' END AS severity,
                'customer'  customer,
                CASE WHEN typ IS NOT NULL AND (val is NULL OR nodeType <> '@id'
                    OR (val <> 'https://industry-fusion.com/types/v0.9/WC0' AND
                        val <> 'https://industry-fusion.com/types/v0.9/WC1' AND
                        val <> 'https://industry-fusion.com/types/v0.9/WC2'))
                    THEN 'Model validation for relationship https://industry-fusion.com/types/v0.9/state failed for ' || idx || '. Invalid value ' || IFNULL(val, 'NULL')
                    ELSE 'All ok' END as `text`
            FROM (
                SELECT A.id as idx, A.`type` as typ, B.`https://uri.etsi.org/ngsi-ld/hasValue` as val, B.nodeType as nodeType FROM filter_cartridge_view AS A
                    LEFT JOIN attributes_view AS B ON A.`https://industry-fusion.com/types/v0.9/wasteClass` = B.id
            );
        - |-
            /* Digital Twin service: check joint cutter and filter states from cuuter POV*/
            INSERT INTO alerts_bulk
            SELECT cutterId AS resource,
                'Cutter and Filter relationship check' AS event,
                'Development' AS environment,
                ARRAY ['Digital Twin'] AS service,
                CASE WHEN cutter_state = 'https://industry-fusion.com/types/v0.9/state_PROCESSING' 
                        AND (filter_state <> 'https://industry-fusion.com/types/v0.9/state_ON' 
                            OR filter_state IS NULL)
                        THEN 'critical'
                        ELSE 'ok'
                END as severity,
                'customer' as customer,
                CASE WHEN cutter_state = 'https://industry-fusion.com/types/v0.9/state_PROCESSING' AND (filter_state <> 'https://industry-fusion.com/types/v0.9/state_ON' OR filter_state IS NULL) THEN 'Cutter ' || cutterId || ' is processing without running filter.'
                        ELSE 'OK'
                END as `text`
            FROM (
                SELECT A.id AS cutterId,
                    B.filter_state as filter_state,
                    E.`https://uri.etsi.org/ngsi-ld/hasValue` as cutter_state FROM cutter_view AS A
                LEFT JOIN attributes_view AS E ON A.`https://industry-fusion.com/types/v0.9/state` = E.id
                LEFT JOIN ( 
                    select D.`https://uri.etsi.org/ngsi-ld/hasValue` as filter_state, B.id as id from attributes_view AS B
                    JOIN filter_view AS C ON B.`https://uri.etsi.org/ngsi-ld/hasObject` = C.id
                    JOIN attributes_view AS D ON C.`https://industry-fusion.com/types/v0.9/state` = D.id
                ) AS B ON A.`https://industry-fusion.com/types/v0.9/hasFilter` = B.id
                where E.`https://uri.etsi.org/ngsi-ld/hasValue` is NOT NULL
            );
        - |-
            /* Digital Twin service: check joint cutter and filter states from filter POV
            No need for left joins: If Filter relation does not exist, the validator will tell */
            INSERT INTO alerts_bulk
            SELECT filterId AS resource,
                'Filter and Cutter relationship check' AS event,
                'Development' AS environment,
                ARRAY ['Digital Twin'] AS service,
                CASE WHEN filter_state = 'https://industry-fusion.com/types/v0.9/state_ON'
                        AND cutter_state <> 'https://industry-fusion.com/types/v0.9/state_PROCESSING'
                        THEN 'warning'
                        ELSE 'ok'
                END as severity,
                'customer' as customer,
                CASE WHEN filter_state = 'https://industry-fusion.com/types/v0.9/state_ON' AND cutter_state <> 'https://industry-fusion.com/types/v0.9/state_PROCESSING' THEN 'Fitter ' || filterId || ' is running without running cutter.'
                        ELSE 'OK'
                END as `text`
            FROM (
                SELECT A.id AS filterId,
                    D.`https://uri.etsi.org/ngsi-ld/hasValue` as filter_state,
                    E.`https://uri.etsi.org/ngsi-ld/hasValue` as cutter_state FROM filter_view AS A
                LEFT JOIN attributes_view AS B ON B.`https://uri.etsi.org/ngsi-ld/hasObject` = A.id and B.name = 'https://industry-fusion.com/types/v0.9/hasFilter'
                LEFT JOIN cutter_view AS C ON B.id = C.`https://industry-fusion.com/types/v0.9/hasFilter`
                LEFT JOIN attributes_view AS D ON A.`https://industry-fusion.com/types/v0.9/state` = D.id
                LEFT JOIN attributes_view AS E ON C.`https://industry-fusion.com/types/v0.9/state` = E.id
                
            );
        - |-
            /* validate relationship hasFilter of plasmacutter object for DIGITAL-TWIN SERVICE */
            INSERT INTO alerts_bulk
            SELECT this AS resource,
                'Cutter has assigned filter check' AS event,
                'Development' AS environment,
                ARRAY ['Digital Twin'] AS service,
                CASE WHEN cnt < 1 AND typ IS NOT NULL THEN 'warning'
                    ELSE 'ok' END AS severity,
                'customer'  customer,
                CASE WHEN cnt < 1 AND typ IS NOT NULL THEN 'Cutter ' || this || ' has no assigned filter(s).'
                    ELSE 'OK' END as `text`
                FROM
                (
                    SELECT A.id AS this, count(C.`type`) AS cnt, A.`type` AS typ
                    FROM cutter_view AS A
                    LEFT JOIN attributes_view AS B ON A.`https://industry-fusion.com/types/v0.9/hasFilter` = B.id
                    LEFT JOIN filter_view AS C ON B.`https://uri.etsi.org/ngsi-ld/hasObject` = C.id
                    WHERE
                        --A.`type` IS NOT NULL
                        (B.`type` = 'https://uri.etsi.org/ngsi-ld/Relationship' OR B.`type` IS NULL)
                        AND (B.entityId = A.id OR B.entityId IS NULL)
                        AND (B.name = 'https://industry-fusion.com/types/v0.9/hasFilter' OR B.name IS NULL)
                GROUP BY A.id, A.`type`
                );
        - |-
            /* Updates usedUntil timestamp of filter cartridge */
            insert into cloud_events
            select cutter_id || '/com.industry-fusion.ngsild-updates/updateFilterTimestamp' as source, '1.0' as specversion, 'com.industry-fusion.ngsild-updates/updateFilterTimestamp' as `type`,
            CASE WHEN cutter_state = 'https://industry-fusion.com/types/v0.9/state_PROCESSING'
                    AND filter_state = 'https://industry-fusion.com/types/v0.9/state_ON'
                THEN 
                    '{ "op": "update", "overwriteOrReplace": "true", "entities": "[{ \"@context\": \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\", \"https://industry-fusion.com/types/v0.9/usedUntil\": {\"type\": \"Property\", \"value\": \"' 
                    || CAST(current_timestamp AS STRING) || '\"}, \"id\": \"'
                || filter_cartridge_id || '\"}]"}'
                ELSE NULL END as data
            from
            (SELECT A.id as cutter_id,
                F.id as filter_cartridge_id,    
                G.`https://uri.etsi.org/ngsi-ld/hasValue` as cutter_state, 
                H.`https://uri.etsi.org/ngsi-ld/hasValue` as filter_state
                
                FROM cutter_view AS A
                JOIN attributes_view AS B ON A.`https://industry-fusion.com/types/v0.9/hasFilter` = B.id
                JOIN filter_view AS D ON B.`https://uri.etsi.org/ngsi-ld/hasObject` = D.id
                JOIN attributes_view AS E ON D.`https://industry-fusion.com/types/v0.9/hasCartridge` = E.id
                JOIN filter_cartridge_view AS F ON E.`https://uri.etsi.org/ngsi-ld/hasObject` = F.id
                JOIN attributes_view as G on A.`https://industry-fusion.com/types/v0.9/state` = G.id
                JOIN attributes_view as H on D.`https://industry-fusion.com/types/v0.9/state` = H.id
            );
        - |-
            /* update usedFrom timestamp from filterCartridge*/
            insert into cloud_events
            select cutter_id || '/com.industry-fusion.ngsild-updates/updateUsedFromTimestamp' as source, '1.0' as specversion, 'com.industry-fusion.ngsild-updates/updateUsedFromTimestamp' as `type`,
            CASE WHEN cutter_state = 'https://industry-fusion.com/types/v0.9/state_PROCESSING'
                    AND filter_state = 'https://industry-fusion.com/types/v0.9/state_ON' AND usedFrom is NULL
                THEN 
                    '{ "op": "update", "overwriteOrReplace": "false", "entities": "[{ \"@context\": \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\", \"https://industry-fusion.com/types/v0.9/usedFrom\": {\"type\": \"Property\", \"value\": \"' 
                    || CAST(current_timestamp AS STRING) || '\"}, \"id\": \"'
                || filter_cartridge_id || '\"}]"}'
                ELSE NULL END as data
            from
            (SELECT A.id as cutter_id,
                F.id as filter_cartridge_id,    
                G.`https://uri.etsi.org/ngsi-ld/hasValue` as cutter_state, 
                H.`https://uri.etsi.org/ngsi-ld/hasValue` as filter_state,
                K.`https://uri.etsi.org/ngsi-ld/hasValue` as usedFrom
                
                FROM cutter_view AS A
                JOIN attributes_view AS B ON A.`https://industry-fusion.com/types/v0.9/hasFilter` = B.id
                JOIN filter_view AS D ON B.`https://uri.etsi.org/ngsi-ld/hasObject` = D.id
                JOIN attributes_view AS E ON D.`https://industry-fusion.com/types/v0.9/hasCartridge` = E.id
                JOIN filter_cartridge_view AS F ON E.`https://uri.etsi.org/ngsi-ld/hasObject` = F.id
                JOIN attributes_view as G on A.`https://industry-fusion.com/types/v0.9/state` = G.id
                JOIN attributes_view as H on D.`https://industry-fusion.com/types/v0.9/state` = H.id
                LEFT JOIN attributes_view as K ON F.`https://industry-fusion.com/types/v0.9/usedUntil` = K.id
            );
        - |-
         /* Update wasteClass in filter cartridge */
            insert into cloud_events
            select
                cutter_id || '/com.industry-fusion.ngsild-updates/updateWasteClass' as source, '1.0' as specversion, 'com.industry-fusion.ngsild-updates/updateWasteClass' as `type`,
                CASE WHEN cutter_state = 'https://industry-fusion.com/types/v0.9/state_PROCESSING'
                    AND filter_state = 'https://industry-fusion.com/types/v0.9/state_ON' AND mat2wcmap[material] > wctoordermap[wasteClass]
                THEN 
                    '{ "op": "update", "overwriteOrReplace": "true", "entities": "[{ \"@context\": \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\", \"https://industry-fusion.com/types/v0.9/wasteClass\": {\"type\": \"Property\", \"value\": {\"@id\": \"' 
                    || wcmap[mat2wcmap[material]] || '\"}}, \"id\": \"'
                || filter_cartridge_id || '\"}]"}'
                ELSE NULL END as data
            from
            (select *,
                MAP['1.4301', 1, '1.4302', 1, '1.4303', 1, '1.4304', 1, '1.4305', 1, '1.3301', 2, '1.3302', 2, '1.3303', 2, '1.3304', 2, '1.3305', 2, '1.5301', 3, '1.5302', 3, '1.5303', 3, '1.5304', 3, '1.5305', 3] as mat2wcmap,
                MAP[1, 'https://industry-fusion.com/types/v0.9/WC0', 2, 'https://industry-fusion.com/types/v0.9/WC1', 3, 'https://industry-fusion.com/types/v0.9/WC2'] as wcmap,
                MAP['https://industry-fusion.com/types/v0.9/WC0', 1, 'https://industry-fusion.com/types/v0.9/WC1', 2, 'https://industry-fusion.com/types/v0.9/WC2', 3] as wctoordermap
            from

            (SELECT A.id as cutter_id,
                F.id as filter_cartridge_id,    
                G.`https://uri.etsi.org/ngsi-ld/hasValue` as cutter_state, 
                H.`https://uri.etsi.org/ngsi-ld/hasValue` as filter_state,
                J.`https://uri.etsi.org/ngsi-ld/hasValue` as material,
                K.`https://uri.etsi.org/ngsi-ld/hasValue` as wasteClass
                
                FROM cutter_view AS A
                JOIN attributes_view AS B ON A.`https://industry-fusion.com/types/v0.9/hasFilter` = B.id
                JOIN attributes_view AS C ON A.`https://industry-fusion.com/types/v0.9/hasWorkpiece` = C.id
                JOIN filter_view AS D ON B.`https://uri.etsi.org/ngsi-ld/hasObject` = D.id
                JOIN attributes_view AS E ON D.`https://industry-fusion.com/types/v0.9/hasCartridge` = E.id
                JOIN filter_cartridge_view AS F ON E.`https://uri.etsi.org/ngsi-ld/hasObject` = F.id
                JOIN attributes_view as G on A.`https://industry-fusion.com/types/v0.9/state` = G.id
                JOIN attributes_view as H on D.`https://industry-fusion.com/types/v0.9/state` = H.id
                JOIN workpiece_view as I on C.`https://uri.etsi.org/ngsi-ld/hasObject` = I.id
                JOIN attributes_view as J on I.`https://industry-fusion.com/types/v0.9/material` = J.id
                LEFT JOIN attributes_view as K ON F.`https://industry-fusion.com/types/v0.9/wasteClass` = K.id
            ));
    tables:
        - alerts-bulk
        - machine
        - cutter
        - filter
        - workpiece
        - attributes
        - filter-cartridge
        - cloud-events
    views:
        - machine-view
        - cutter-view
        - filter-view
        - workpiece-view
        - attributes-view
        - filter-cartridge-view
