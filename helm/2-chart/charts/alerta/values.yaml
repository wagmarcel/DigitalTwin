# Default values for alerta.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: alerta/alerta-web
  tag: 8.1.0
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 8080

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 1
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

extraSecretMounts:
  []
  # - name: secret-files
  #   mountPath: /etc/secrets
  #   subPath: ""
  #   secretName: alertmanager-secret-files
  #   readOnly: true

alertaAdminPassword: "admin" # if not provided will be randomly generated
alertaAdminUsers: # list of email addresses
  - "admin"
#   - "admin@alerta.io"
# alertaAdminKey: "<your_api_key_here>"
# alertaApiKey: "<your_api_key_here>" # you probably want to set this to the same value as 'alertaAdminKey'

# Alerta plugins to install
# alertaInstallPlugins:
#   - normalise
#   - enhance

# ref: http://docs.alerta.io/en/latest/configuration.html
alertaConfig: |
  AUTH_REQUIRED = "True"
  DATABASE_URL = "postgres://postgres:postgres@db:5432/monitoring"

  SEVERITY_MAP = {
  'fatal': 0,
  'critical': 1,
  'warning': 4,
  'indeterminate': 5,
  'ok': 5,
  'page':5,
  'normal':5,
  'unknown': 9,
  'up': 5,
  'down': 0
  }

  COLOR_MAP = {
  'severity': {
  'fatal': 'orange',
  'critical': 'red',
  'warning': '#1E90FF',
  'indeterminate': 'lightblue',
  'ok': '#00CC00',
  'ok': '#00CC00',
  'unknown': 'silver',
  'page': ' #f8e900',
  'up' : '#00CC00',
  'down' : 'red'
  }
  }

  DEFAULT_NORMAL_SEVERITY = 'ok'
  COLUMNS = ['severity', 'status', 'lastReceiveTime', 'duplicateCount', 'customer', 'environment', 'service', 'resource', 'event', 'value', 'text']
  PLUGINS=['reject']
  ALLOWED_ENVIRONMENTS=['Production', 'Development', 'Code']

  AUTH_PROVIDER = 'keycloak'
  KEYCLOAK_URL = 
  KEYCLOAK_REALM = 

  REQUESTS_CA_BUNDLE=True
  ADMIN_USERS = ['admin']
  USER_DEFAULT_SCOPES = ['read','write:alerts']

alertaConfigSercrets:
  OAUTH2_CLIENT_ID: alerta-ui
  OAUTH2_CLIENT_SECRET:
  #SECRET_KEY:

# ref: http://docs.alerta.io/en/latest/webui.html
alertaWebUIConfig: |
  {"endpoint": "/api"}
#   // contents of config.js
#   'use strict';
#   angular.module('config', [])
#     .constant('config', {
#       'endpoint'    : "/api",
#       'provider'    : "basic"
#     })
#     .constant('colors', {});

postgresql:
  enabled: false
  postgresqlUsername: alerta
  postgresqlDatabase: monitoring
  postgresqlPassword: "changeme" # provide a password here, otherwise it will be randomly generated inside postgresql helm chart and will not be available as a variable in the alerta helm chart
  persistence:
    enabled: true
    size: 10Gi

  # If deploying on OpenShift
  # volumePermissions:
  #   securityContext:
  #     runAsUser: "auto"
  # securityContext:
  #  enabled: false
  # containerSecurityContext:
  #  enabled: false,
  # shmVolume:
  #  chmod:
  #    enabled: false

  ################################### ingress service #######################################################################
ingress:
  ## Enable the ingress service
  enabled: true
  apiVersion: networking.k8s.io/v1
  name: example-alerta
  hostname: alerta.local
  serviceName: alerta

  tls_secret:
    apiVersion: v1
    name: alerta-tls-secret
    tlsCrt: TUlJRUF6Q0NBdXVnQXdJQkFnSVVkM0VkbnhBcnd6anlON0ljaU55cGZZVG1Qb013RFFZSktvWklodmNOQVFFTApCUUF3Z1pBeEN6QUpCZ05WQkFZVEFrbE9NUXN3Q1FZRFZRUUlEQUpOVURFUE1BMEdBMVVFQnd3R1NXNWtiM0psCk1SVXdFd1lEVlFRS0RBeGhiR1Z5ZEdFdWJHOWpZV3d4RlRBVEJnTlZCQXNNREdGc1pYSjBZUzVzYjJOaGJERVYKTUJNR0ExVUVBd3dNWVd4bGNuUmhMbXh2WTJGc01SNHdIQVlKS29aSWh2Y05BUWtCRmc5aGJHVnlkR0ZBYldGcApiQzVqYjIwd0hoY05NakV4TWpJNU1ETTBOakV3V2hjTk1qSXhNakk1TURNME5qRXdXakNCa0RFTE1Ba0dBMVVFCkJoTUNTVTR4Q3pBSkJnTlZCQWdNQWsxUU1ROHdEUVlEVlFRSERBWkpibVJ2Y21VeEZUQVRCZ05WQkFvTURHRnMKWlhKMFlTNXNiMk5oYkRFVk1CTUdBMVVFQ3d3TVlXeGxjblJoTG14dlkyRnNNUlV3RXdZRFZRUUREQXhoYkdWeQpkR0V1Ykc5allXd3hIakFjQmdrcWhraUc5dzBCQ1FFV0QyRnNaWEowWVVCdFlXbHNMbU52YlRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUs4VDFSeWdPMlNEaUpiS3pBY0w2bVhVVzNlbWtTWVgKeTVaR2tuVDgyWW5VQ3ROUmEyZEY4V2pzVm9LOG9aaWI0Nnl5ZUZrVGZaZTA2QVUvOEw2OGNpWG9DTTJkclZ5ZwpObm9tMUlYN3F2bmliQ00yaUM2ZnVDOUhSSzI2ODBDTXp2MVFIeDBla2hObStNUUwwVzBmeVNtTkJkMnl3bVJ3CmwxYkhVSVN0ODFaUm5xejNYc21udUxTbEhGZm1lanZYOEhLYjJyMEVLNXBnb05TNXVWQTZXZUJsVjhJakZnYW4KcTl3VGZ4RVQySmZNUC9BOEtXOHFCNHQrUDhYNmE4N0I1RTg3M3h5T1NBVnllUnlnUUlwd0l1eXJTZnoreGJvMwp3am43VnhwVkQwNnA0ZDRZazVFd2tZRUJSVlNEb0tHSXpWQW82bUUrdTBBQTlIRGxuSFdQYXNFQ0F3RUFBYU5UCk1GRXdIUVlEVlIwT0JCWUVGTjRxak1mR3l1NzlwU0xJZU56WXlQaTg2czVBTUI4R0ExVWRJd1FZTUJhQUZONHEKak1mR3l1NzlwU0xJZU56WXlQaTg2czVBTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDUWIvNFJxc1AwMzdHeDh5TnRXV0RmQ1E2QkhkSFp1cFhOM1ROa3lqcmh1bEZsdE9tdEpqTXNwCjVaWUs1YXV2dzRBa01jQVQ3ZDI1MHlmR1JnMXYrM3kwS1g0VDNPc1V0VHdYTHlxQTREelB6MVhpWHBDZ0FpRjkKQUY4dm5RODl0SEdzL0tGSzVMWFNQaUxnYlU0NDZDclJHd2lTUEFvWW9nOURlR2ptdWZpUVJVckl0OWhBVVAxaQprSnFQRGRYcmNTcXJiQzdRWWRLUURQdjRlNWoxUXljdkRWYk5pNCtOVkhDN0pLK3gzb2J3QUo2QW1tWFN3VTBkCnFqUEpuTk9paHBOYkcxc2dSUnFlcCtJMFBDL0VhbFNIa01wYitORTZPamlJZWgreHY2elNrZXh1eE9odUMvcDYKMHVTODFnbEtUZ2ZmUDhsL2wzZ2FLREtpTVo4TktQND0=
    tlsKey: TUlJRXZRSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS2N3Z2dTakFnRUFBb0lCQVFDdkU5VWNvRHRrZzRpVwp5c3dIQytwbDFGdDNwcEVtRjh1V1JwSjAvTm1KMUFyVFVXdG5SZkZvN0ZhQ3ZLR1ltK09zc25oWkUzMlh0T2dGClAvQyt2SElsNkFqTm5hMWNvRFo2SnRTRis2cjU0bXdqTm9ndW43Z3ZSMFN0dXZOQWpNNzlVQjhkSHBJVFp2akUKQzlGdEg4a3BqUVhkc3NKa2NKZFd4MUNFcmZOV1VaNnM5MTdKcDdpMHBSeFg1bm83MS9CeW05cTlCQ3VhWUtEVQp1YmxRT2xuZ1pWZkNJeFlHcDZ2Y0UzOFJFOWlYekQvd1BDbHZLZ2VMZmovRittdk93ZVJQTzk4Y2prZ0ZjbmtjCm9FQ0tjQ0xzcTBuOC9zVzZOOEk1KzFjYVZROU9xZUhlR0pPUk1KR0JBVVZVZzZDaGlNMVFLT3BoUHJ0QUFQUncKNVp4MWoyckJBZ01CQUFFQ2dnRUJBSVk3NW9IME9KVndaQ0Y1aThVN1ZaU05wVE92K2tvQ3BJMnJ2azhFTHFhRwpkV1pnWHNEbjE1aGkzRkdRM3pWckVMMHdlU1dTMUJDbEcrQXFqaU12eVRWWEdxakw1RWZJYnZ4cEdUbEJKRzVECk5EWXJjVzZOOTJJSWVwZlpadmh1L2FVcThUQWFhRldIOWVRYVM1QW5kc3pzMnpxSC9KT1YzL01oRHBNcjdBNloKY09tOGlMM2pQa0J3OHJxZjJ1ZGltUHloZkJRMUp1N3N4S3NSbXJoWEhNNVlVeVFXN3pCM1pSKzhSK00wNmZQbgp6d3VidlpBZjhUaEJJc1pRWE0rSWUvc2gwOHkrNldBZ2V4allwalkxeTJOUVM0TzJmVTdOUDBzWUlac09sTWJlCjdmak9CTURVMGUvV2M4MG03b1dWcS8rMzVlajlxN09ZblZGdmdxcUVmU0VDZ1lFQTNNOTdjSzBVcm13WG5UQnQKNXdWZFNkR21oSWd3UXVvTkkwc01wa2dvbVdROElRNE16UzBDUm9wMlpYd3FpWHBFUVNoOC9scWI3L01yL0I4SgplREt2RDR0NVBYSy9RWVdLVEI5Ujlab2Fidy9wNDduV1dobG5KSGwzQTUzVDJUREx6RWFhNTU3SGttWm1iVDdQCnpQRzVWeHlQQnhqb09McFNocXJaaTRLSmdOOENnWUVBeXZxT3RQVHYvTnIxZnBzcldmNGZyWEJ4cFFER0UzYTMKYVFtVlBnVnBKcmYzcFFNdi9HNnArUklHTjJEVzBjZmoyUzhpbklmS1NON0hselZmdHlxVHBoUWE2eDNBUFdmRQowb0FVSXRiQ1d0ZHdMTkJxRTN1WENQdngyL2ZXUmh0U1YzK2drcVJrUVNZT1N1R1ptZFFRUWpVMktsd1dWVVpICjZ3MkRCSGVTYUY4Q2dZQkRhbEZzeUZzOUdhRm9DNFl5ZDIvUS91SlJLbWRadHEzR0xiNng4ZXY3VVNBT2s0U1QKQy8vYTI2RmtRTEdZQWExZkcyWjJIZUhvTTUwbFA3Q2JjeFlCci9xWEtUWjlZYkVrcHBkV1hmTmVIMFN3azJkLwpZS3dkOWJ2QmJlbGxNVUczbjRMaDNwZGQra2VoYVFEMnVJSjJ0ekJ2NFVuZEwvM01RZE5qaGJwSGp3S0JnRU1PCmdhVFFvcFFqZGlVTWVFYnp5RjFSSDRwR2RpbXA5Ni9ReGFoR3UxVmFRNHNWUVg0Z3hUQ092dFQrdmhseDh4a20KRkVZb0tqRG13SU40MDVVOGtLaTJUYXBOR3R4dWNyeWtLWUxVOWtKeW1CR0dEUFZBeUVYa2ppT0FmaDZOR2lmago5eFZiRCsvaDlhalJYU0JQeWN0RnJ3NVJlK05TSTZKSXhYYnRWY1g3QW9HQVhQZk12TVdCVUhGR2xsMHV1bnkxCnIwYzZTVm1hT2RNNjZaaXgxMy9ZcGNDT1hVMVVJUU1LaU1QMXVYQ292bVZleWdCaW5jN2pUaWtMNEdjUTgwUkIKeDFSZDZ0THFTVWplR0lFdUxRcWVlL2tkZ1JGTXlET2U3RnV5N2tOWWg1TzRUVlRYV1hnNVMxWTJLcnVqS0MvVgo2bUNZaTVIcG9XZ2ozbW51T3dMUW5Fbz0=
